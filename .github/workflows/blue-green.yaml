name: Blue-Green Deployment

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: self-hosted  

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Minikube
        run: |
          minikube start --driver=none
          kubectl config use-context minikube

      - name: Load Docker images
        run: |
          minikube image load docker.io/library/blue_env:latest
          minikube image load docker.io/library/green_env:latest

      - name: Apply Blue Deployment
        run: |
          kubectl apply -f kubernets_yamls/blue_version.yaml
          kubectl apply -f kubernets_yamls/service.yaml

      - name: Apply Green Deployment
        run: |
          kubectl apply -f kubernets_yamls/green_version.yaml

      - name: Verify Green Deployment
        run: |
          kubectl rollout status deployment/myapp-deployment-green --timeout=60s

      - name: Switch Traffic to Green if successful
        if: success()
        run: |
          kubectl patch service application-lb-service --type=merge -p '{\"spec\": {\"selector\": {\"app\": \"myapp\", \"version\": \"green\"}}}'

      - name: Switch Traffic to Blue if green fails
        if: failure()
        run: |
          echo "Green deployment failed, continuing with blue deployment."
          kubectl patch service application-lb-service --type=merge -p '{\"spec\": {\"selector\": {\"app\": \"myapp\", \"version\": \"blue\"}}}'

      - name: Cleanup Old Deployment if Green succeeded
        if: success()
        run: |
          kubectl delete deployment myapp-deployment-blue

      - name: Run the application
        run: |
          minikube service application-lb-service
