name: Blue-Green Deployment

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: self-hosted  

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Minikube
        run: |
          minikube start --driver=none
          kubectl config use-context minikube

      - name: Load Docker images
        run: |
          minikube image load docker.io/library/blue_env:latest
          minikube image load docker.io/library/green_env:latest

      - name: Apply Blue Deployment
        run: |
          kubectl apply -f kubernets_yamls/blue_version.yaml
          kubectl apply -f kubernets_yamls/service.yaml

      - name: Apply Green Deployment
        run: |
          kubectl apply -f kubernets_yamls/green_version.yaml

      - name: Verify Green Deployment
        id: verify_green
        run: |
          kubectl rollout status deployment/myapp-deployment-green
        continue-on-error: true  # Allows the workflow to continue if this step fails

      - name: Set Deployment Verification Status
        id: set_status
        run: |
          if [ "${{ steps.verify_green.outcome }}" == "failure" ]; then
            echo "Green deployment failed. Continuing with blue deployment."
            echo "RESULT=unstable" >> $GITHUB_ENV
          else
            echo "Green deployment successful."
            echo "RESULT=stable" >> $GITHUB_ENV
          fi
        continue-on-error: true  # Allows the workflow to continue even if this step fails

      - name: Switch Traffic to Green
        if: ${{ env.RESULT == 'stable' }}  # Only run if green deployment verification succeeded
        run: |
          kubectl patch service application-lb-service --type=merge -p '{"spec": {"selector": {"app": "myapp", "version": "green"}}}'

      - name: Cleanup Old Deployment
        if: ${{ env.RESULT == 'unstable' }}  # Run cleanup if green deployment failed
        run: |
          kubectl delete deployment myapp-deployment-blue

      - name: Run the Application for 15 Seconds
        run: |
          timeout 15s minikube service application-lb-service

